name: HighFive_Integration_tests

on:
  push:
    branches:
      - ci_test
  pull_request:
    branches:
      - main
  schedule:
    - cron: '5 3 * * *'
  repository_dispatch:
    types: [merge] # event_type set in HighFive integration_trigger.yml
  workflow_dispatch:
    inputs:
      highfive_branch:
        description: "HighFive branch to test against"
        required: false
        default: "v2.x"
        type: string

      libsonata_branch:
        description: "Libsonata branch to test"
        required: false
        default: "master"
        type: string

env:
  BUILD_TYPE: RelWithDebInfo
  INSTALL_DIR: ${{github.workspace}}/install
  HIGHFIVE_GIT: "https://github.com/highfive-devs/highfive.git"
  MORPHIO_GIT: "https://github.com/BlueBrain/MorphIO.git"
  LIBSONATA_GIT: "https://github.com/BlueBrain/libsonata.git"

jobs:

  Integration:
    runs-on: ubuntu-latest

    env:
      HIGHFIVE_BRANCH: ${{ github.event.inputs.highfive_branch }}
      LIBSONATA_BRANCH: ${{ github.event.inputs.libsonata_branch }}

    steps:
    - uses: actions/checkout@v2

    - name: "Install libraries"
      run: sudo apt-get update && sudo apt-get install libboost-all-dev libhdf5-dev libeigen3-dev

    - name: Build HighFive
      run: |
        HIGHFIVE_BRANCH=${HIGHFIVE_BRANCH:-"v2.x"}

        git clone ${HIGHFIVE_GIT} --branch ${HIGHFIVE_BRANCH} --recursive
        cd HighFive

        CMAKE_OPTIONS=(-DHIGHFIVE_EXAMPLES:BOOL=False \
          -DHIGHFIVE_UNIT_TESTS:BOOL=False \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DHIGHFIVE_USE_EIGEN:BOOL=True)
        source $GITHUB_WORKSPACE/ci/build.sh

    - name: Build and Test MorphIO
      run: |
        git clone ${MORPHIO_GIT} --recursive
        cd MorphIO

        CMAKE_OPTIONS=(-DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DMorphIO_WERROR=OFF \
          -DEXTERNAL_HIGHFIVE:BOOL=True)
        source $GITHUB_WORKSPACE/ci/build.sh
        cd build && ctest --output-on-failure

    - name: Build and Test libsonata
      if: success() || failure()
      run: |
        HIGHFIVE_BRANCH=${HIGHFIVE_BRANCH:-"v2.x"}
        LIBSONATA_BRANCH=${LIBSONATA_BRANCH:-"master"}

        git clone ${LIBSONATA_GIT} --branch ${LIBSONATA_BRANCH} --recursive
        cd libsonata

        pushd extlib/HighFive
        git fetch && git checkout origin/${HIGHFIVE_BRANCH}
        popd

        CMAKE_OPTIONS=(-DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DEXTLIB_FROM_SUBMODULES:BOOL=True)
        source $GITHUB_WORKSPACE/ci/build.sh
        cd build && ctest --output-on-failure

    - name: live debug session on failure
      if: failure() && contains(github.event.head_commit.message, 'live-debug-ci')
      uses: mxschmitt/action-tmate@v3
